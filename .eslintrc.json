{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest", // Allows for the parsing of modern ECMAScript features
		"sourceType": "module", // Allows for the use of imports
		"ecmaFeatures": {
			"jsx": true
		},
		"project": [
			"tsconfig.json",
			"projects/client/tsconfig.json",
			"projects/server/tsconfig.json",
			"projects/shared/tsconfig.json"
		]
	},
	"settings": {
		"react": {
			"version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
		}
	},
	"plugins": [
		"@typescript-eslint",
		"deprecation",
		"react-hooks"
	],
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking"
	],
	"rules": {
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"arrow-parens": [
			"error",
			"as-needed"
		],
		"semi": [
			"error",
			"never"
		],
		"quotes": [
			"error",
			"double",
			{
				"allowTemplateLiterals": true
			}
		],
		"react/react-in-jsx-scope": "off",
		"react/prop-types": "error", //This doesn't work right see: https://github.com/yannickcr/eslint-plugin-react/issues/2353
		"@typescript-eslint/no-floating-promises": "error",
		"no-console": "error",
		"deprecation/deprecation": "warn",
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "warn",
		// note you must disable the base rule as it can report incorrect errors
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": [
			"error"
		]
	}
}
//waiting for these rules
//https://github.com/typescript-eslint/typescript-eslint/issues/371